version: 2.1
jobs:
    build_test:
        docker:
            - image: ubuntu:focal
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl and use pipenv to install dependencies
                      export DEBIAN_FRONTEND=noninteractive
                      apt-get update -y && apt-get -y install software-properties-common
                      add-apt-repository ppa:git-core/ppa -y
                      apt-get update -y
                      apt-get -y install build-essential wget python3 python3-pip git
                      mkdir cmake && cd cmake && wget https://github.com/Kitware/CMake/releases/download/v3.18.5/cmake-3.18.5-Linux-x86_64.sh && \
                                                chmod +x cmake-3.18.5-Linux-x86_64.sh && \
                                                ./cmake-3.18.5-Linux-x86_64.sh --skip-license --prefix=/usr/local && cd ..
                      pip3 install setuptools
                      python3 setup.py sdist bdist_wheel
                      pip3 install pipenv
                      pipenv install -r requirements_dev.txt
                      pipenv install pytest
                      cmake --version
                      ls -lrt
            - run:
                  command: |  # Run test suite
                      pipenv run pytest -sv
    update_version_based_on_new_tag_in_main:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout
            - run:
                command: |
                  'next_version_git=$(git tag -l | grep -P "v\d+\.\d+\.\d+" | sort -t "." -k1,1n -k2,2n -k3,3n | sort -r | head -n 1 | grep -oP "\d+\.\d+\.\d+")'
                  git tag -d ${next_version_git}
                  git config --global user.email "cicd@circleci.com"
                  git config --global user.name "CI/CD - CircleCi"
                  bash .circleci/update_version.bash ${next_version_git}
                  git commit -a -m "Bump version to ${next_version_git}"
                  git tag "v${next_version_gift}"
                  git push --all
    test_pypi_publish:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to Test PyPI
                      python setup.py sdist bdist_wheel
                      sudo pip install pipenv
                      pipenv install twine
                      pipenv run twine upload --repository testpypi dist/*
    pypi_publish:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to PyPI
                      python setup.py sdist bdist_wheel
                      sudo pip install pipenv
                      pipenv install twine
                      pipenv run twine upload dist/*
workflows:
    build_test_publish:
        jobs:
            - update_version_based_on_new_tag_in_main:
                  filters:
                    branches:
                      only:
                        - main
                    tags:
                      only: /^v.*/
#            - test_pypi_publish:
#                  requires:
#                      - build_test
#                  filters:
#                      branches:
#                          only:
#                              - develop

#            - pypi_publish:
#                  requires:
#                      - build_test
#                  filters:
#                      branches:
#                          only:
#                              - main
