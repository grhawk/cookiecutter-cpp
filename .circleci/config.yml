version: 2.1
jobs:
    build_test:
        docker:
            - image: ubuntu:focal
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl and use pipenv to install dependencies
                      export DEBIAN_FRONTEND=noninteractive
                      apt-get update -y && apt-get -y install software-properties-common
                      add-apt-repository ppa:git-core/ppa -y
                      apt-get update -y
                      apt-get -y install build-essential wget python3 python3-pip git
                      mkdir cmake && cd cmake && wget https://github.com/Kitware/CMake/releases/download/v3.18.5/cmake-3.18.5-Linux-x86_64.sh && \
                                                chmod +x cmake-3.18.5-Linux-x86_64.sh && \
                                                ./cmake-3.18.5-Linux-x86_64.sh --skip-license --prefix=/usr/local && cd ..
                      pip3 install setuptools
                      python3 setup.py sdist bdist_wheel
                      pip3 install pipenv
                      pipenv install -r requirements_dev.txt
                      pipenv install pytest
                      cmake --version
                      ls -lrt
            - run:
                  command: |  # Run test suite
                      pipenv run pytest -sv
    update_version_based_on_new_tag_in_main:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - add_ssh_keys:
                  fingerprints:
                      1a:1a:0c:7e:2b:44:a7:73:f8:33:c8:4a:7b:87:2a:98
            - checkout
            - run:
                command: |
                  next_version_git=${CIRCLE_TAG:5}
                  echo "#${next_version_git}#"
                  git checkout main
                  git tag -d "${CIRCLE_TAG}"
                  git config --global user.email "cicd@ci.cd"
                  git config --global user.name "CI/CD - CircleCi"
                  bash .circleci/update_version.bash ${next_version_git}
                  git commit -a -m "[CI/CD] Bump version to ${next_version_git}"
                  git tag "${next_version_git}"
                  git push
                  git push --delete origin "${CIRCLE_TAG}"
                  git push --tags

    test_pypi_publish:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to Test PyPI
                      python setup.py sdist bdist_wheel
                      sudo pip install pipenv
                      pipenv install twine
                      pipenv run twine upload --repository testpypi dist/*
    pypi_publish:
        docker:
            - image: circleci/python:3.6.4
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to PyPI
                      python setup.py sdist bdist_wheel
                      sudo pip install pipenv
                      pipenv install twine
                      pipenv run twine upload dist/*
workflows:
    bump_version_and_publish:
        jobs:
            - build_test
            - update_version_based_on_new_tag_in_main:
                requires:
                    - build_test
                filters:
                    tags:
                        only: /^bump\/v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/
            - approval_to_test_server:
                type: approval
                requires:
                    - update_version_based_on_new_tag_in_main
            - testpypi_publish:
                requires:
                    - approval
            - approval_to_release:
                type: approval
                requires:
                    - testpypi_publish
            - pypi_publish:
                requires:
                    - testpypi_publish

    build_test:
        jobs:
            -build_test

