version: 2.1

executors:
  exectr:
    docker:
      - image: grhawk/cookiecutter-cpp-test-environment:latest

jobs:
    build_test:
        executor: exectr
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # Run test suite
                      pytest -sv
    update_version_based_on_new_tag_in_main:
        docker:
            - image: cimg/python:3.9.9
        steps:
            - add_ssh_keys:
                  fingerprints:
                      b1:29:3c:83:09:75:5c:20:ef:3c:e5:11:66:2d:ce:75
            - checkout
            - run:
                command: |
                  next_version_git=${CIRCLE_TAG:6}
                  echo "#${next_version_git}#"
                  git checkout main
                  git tag -d "${CIRCLE_TAG}"
                  git config --global user.email "cicd@ci.cd"
                  git config --global user.name "CI/CD - CircleCi"
                  bash .circleci/update_version.bash ${next_version_git}
                  git commit -a -m "[skip ci] [CI/CD] Bump version to v${next_version_git}"
                  git tag "v${next_version_git}"
                  git push
                  git push --delete origin "${CIRCLE_TAG}"
                  git push --tags
    test_pypi_publish:
        docker:
            - image: cimg/python:3.9.9
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to Test PyPI
                      pip install --upgrade pip
                      python setup.py sdist bdist_wheel
                      pip install pipenv
                      pipenv install twine
                      pipenv run twine upload --repository testpypi dist/*
    pypi_publish:
        docker:
            - image: cimg/python:3.9.9
        steps:
            - checkout  # checkout source code to working directory
            - run:
                  command: |  # create whl, install twine and publish to PyPI
                      pip install --upgrade pip
                      python setup.py sdist bdist_wheel
                      pip install pipenv
                      pipenv install twine
                      pipenv run twine upload dist/*
workflows:
    bump_version:
        jobs:
            - build_test:
                filters:
                    tags:
                        only: /^bump\/v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/
            - update_version_based_on_new_tag_in_main:
                requires:
                    - build_test
                filters:
                    tags:
                        only: /^bump\/v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/
    publish:   # This is gonna run just after the bump_version automatically.
        jobs:
            - test_pypi_publish:
                filters:
                    tags:
                        only: /^v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/
            - hold_publish:
                type: approval
                requires:
                    - test_pypi_publish
                filters:
                    tags:
                        only: /^v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/
            - pypi_publish:
                requires:
                    - hold_publish
                filters:
                    tags:
                        only: /^v\d+\.\d+\.\d+.*/
                    branches:
                        ignore: /.*/

    build_test:
        jobs:
            - build_test

